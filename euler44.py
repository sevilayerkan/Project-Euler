#Author: @sevilayerkan
#Date: 5.08.22

""" Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

"""
#Find the nth pentagonal number
def nthPentagonal(n):
    return n*(3*n-1)/2

#Find Pj and Pk for given D
def findPjPk(D):
    for j in range(1,1000):
        for k in range(j+1,1000):
            if nthPentagonal(j)+nthPentagonal(k)==D:
                return j,k
    return None

#Find D for given Pj and Pk
def findD(Pj,Pk):
    return abs(Pk-Pj)   #abs() function returns the absolute value of the number

#Main function
if __name__ == "__main__":
    print(findD(findPjPk(1000)))
    #Returns 5482660